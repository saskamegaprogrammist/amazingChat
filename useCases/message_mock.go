// Code generated by MockGen. DO NOT EDIT.
// Source: useCases/message_interface.go

// Package mock_useCases is a generated GoMock package.
package useCases

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/saskamegaprogrammist/amazingChat/models"
	reflect "reflect"
)

// MockMessagesUCInterface is a mock of MessagesUCInterface interface
type MockMessagesUCInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMessagesUCInterfaceMockRecorder
}

// MockMessagesUCInterfaceMockRecorder is the mock recorder for MockMessagesUCInterface
type MockMessagesUCInterfaceMockRecorder struct {
	mock *MockMessagesUCInterface
}

// NewMockMessagesUCInterface creates a new mock instance
func NewMockMessagesUCInterface(ctrl *gomock.Controller) *MockMessagesUCInterface {
	mock := &MockMessagesUCInterface{ctrl: ctrl}
	mock.recorder = &MockMessagesUCInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMessagesUCInterface) EXPECT() *MockMessagesUCInterfaceMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockMessagesUCInterface) Add(message *models.Message) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", message)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add
func (mr *MockMessagesUCInterfaceMockRecorder) Add(message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockMessagesUCInterface)(nil).Add), message)
}

// GetChatMessagesSorted mocks base method
func (m *MockMessagesUCInterface) GetChatMessagesSorted(chat *models.ChatId) (bool, []models.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChatMessagesSorted", chat)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].([]models.Message)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetChatMessagesSorted indicates an expected call of GetChatMessagesSorted
func (mr *MockMessagesUCInterfaceMockRecorder) GetChatMessagesSorted(chat interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChatMessagesSorted", reflect.TypeOf((*MockMessagesUCInterface)(nil).GetChatMessagesSorted), chat)
}
