// Code generated by MockGen. DO NOT EDIT.
// Source: useCases/chat_interface.go

// Package mock_useCases is a generated GoMock package.
package useCases

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/saskamegaprogrammist/amazingChat/models"
	reflect "reflect"
)

// MockChatsUCInterface is a mock of ChatsUCInterface interface
type MockChatsUCInterface struct {
	ctrl     *gomock.Controller
	recorder *MockChatsUCInterfaceMockRecorder
}

// MockChatsUCInterfaceMockRecorder is the mock recorder for MockChatsUCInterface
type MockChatsUCInterfaceMockRecorder struct {
	mock *MockChatsUCInterface
}

// NewMockChatsUCInterface creates a new mock instance
func NewMockChatsUCInterface(ctrl *gomock.Controller) *MockChatsUCInterface {
	mock := &MockChatsUCInterface{ctrl: ctrl}
	mock.recorder = &MockChatsUCInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockChatsUCInterface) EXPECT() *MockChatsUCInterfaceMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockChatsUCInterface) Add(chat *models.Chat) (bool, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", chat)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Add indicates an expected call of Add
func (mr *MockChatsUCInterfaceMockRecorder) Add(chat interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockChatsUCInterface)(nil).Add), chat)
}

// GetUserChatsSorted mocks base method
func (m *MockChatsUCInterface) GetUserChatsSorted(user *models.UserId) (bool, []models.Chat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserChatsSorted", user)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].([]models.Chat)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetUserChatsSorted indicates an expected call of GetUserChatsSorted
func (mr *MockChatsUCInterfaceMockRecorder) GetUserChatsSorted(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserChatsSorted", reflect.TypeOf((*MockChatsUCInterface)(nil).GetUserChatsSorted), user)
}
