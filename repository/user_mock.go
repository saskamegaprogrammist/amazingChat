// Code generated by MockGen. DO NOT EDIT.
// Source: repository/user_interface.go

// Package mock_repository is a generated GoMock package.
package repository

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/saskamegaprogrammist/amazingChat/models"
	reflect "reflect"
)

// MockUsersRepoInterface is a mock of UsersRepoInterface interface
type MockUsersRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUsersRepoInterfaceMockRecorder
}

// MockUsersRepoInterfaceMockRecorder is the mock recorder for MockUsersRepoInterface
type MockUsersRepoInterfaceMockRecorder struct {
	mock *MockUsersRepoInterface
}

// NewMockUsersRepoInterface creates a new mock instance
func NewMockUsersRepoInterface(ctrl *gomock.Controller) *MockUsersRepoInterface {
	mock := &MockUsersRepoInterface{ctrl: ctrl}
	mock.recorder = &MockUsersRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUsersRepoInterface) EXPECT() *MockUsersRepoInterfaceMockRecorder {
	return m.recorder
}

// GetUserIdByUsername mocks base method
func (m *MockUsersRepoInterface) GetUserIdByUsername(user *models.User) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserIdByUsername", user)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserIdByUsername indicates an expected call of GetUserIdByUsername
func (mr *MockUsersRepoInterfaceMockRecorder) GetUserIdByUsername(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserIdByUsername", reflect.TypeOf((*MockUsersRepoInterface)(nil).GetUserIdByUsername), user)
}

// CheckUser mocks base method
func (m *MockUsersRepoInterface) CheckUser(userId string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckUser", userId)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckUser indicates an expected call of CheckUser
func (mr *MockUsersRepoInterfaceMockRecorder) CheckUser(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckUser", reflect.TypeOf((*MockUsersRepoInterface)(nil).CheckUser), userId)
}

// InsertUser mocks base method
func (m *MockUsersRepoInterface) InsertUser(user *models.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertUser", user)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertUser indicates an expected call of InsertUser
func (mr *MockUsersRepoInterfaceMockRecorder) InsertUser(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertUser", reflect.TypeOf((*MockUsersRepoInterface)(nil).InsertUser), user)
}
